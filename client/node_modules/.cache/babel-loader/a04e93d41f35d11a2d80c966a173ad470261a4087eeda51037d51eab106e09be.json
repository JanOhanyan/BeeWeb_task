{"ast":null,"code":"var _jsxFileName = \"/Users/janohanyan/Desktop/diplomayin/WebTravel/front/src/pages/Restaurants/restaurants.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProfileCard from '../../components/ProfileCard/ProfileCard';\nimport { PageTitleSelect } from '../../components/Select/Select';\nimport './restaurants.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Restaurants = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n\n  // Function to fetch restaurants data from backend\n  const fetchRestaurants = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/restaurants\", {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}` // Fixed 'Barear' to 'Bearer'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching restaurants:', error.message);\n      return []; // Return empty array in case of error\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const restaurantsData = await fetchRestaurants();\n      setRestaurants(restaurantsData);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitleSelect, {\n      title: \"\\u054C\\u0565\\u057D\\u057F\\u0578\\u0580\\u0561\\u0576\\u0576\\u0565\\u0580\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurants-page\",\n      children: restaurants.map((restaurant, index) => /*#__PURE__*/_jsxDEV(ProfileCard, {\n        ...restaurant\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Restaurants, \"UUwaAnmni1jVfIU2TonQ0iTwxYs=\");\n_c = Restaurants;\nexport { Restaurants };\nvar _c;\n$RefreshReg$(_c, \"Restaurants\");","map":{"version":3,"names":["React","useState","useEffect","ProfileCard","PageTitleSelect","jsxDEV","_jsxDEV","Fragment","_Fragment","Restaurants","_s","restaurants","setRestaurants","fetchRestaurants","response","fetch","method","headers","localStorage","getItem","ok","Error","data","json","error","console","message","fetchData","restaurantsData","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","map","restaurant","index","_c","$RefreshReg$"],"sources":["/Users/janohanyan/Desktop/diplomayin/WebTravel/front/src/pages/Restaurants/restaurants.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProfileCard from '../../components/ProfileCard/ProfileCard';\nimport { PageTitleSelect } from '../../components/Select/Select';\nimport './restaurants.css';\n\nconst Restaurants = () => {\n\n  const [restaurants, setRestaurants] = useState([]);\n\n  // Function to fetch restaurants data from backend\n  const fetchRestaurants = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/restaurants\", {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}` // Fixed 'Barear' to 'Bearer'\n        },\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching restaurants:', error.message);\n      return []; // Return empty array in case of error\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const restaurantsData = await fetchRestaurants();\n      setRestaurants(restaurantsData);\n    };\n\n    fetchData();\n  }, []); \n  return (\n    <>\n      <PageTitleSelect title='Ռեստորաններ' />\n      <div className=\"restaurants-page\">\n        {restaurants.map((restaurant, index) => (\n          <ProfileCard key={index} {...restaurant} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport {Restaurants};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,0CAA0C;AAClE,SAASC,eAAe,QAAQ,gCAAgC;AAChE,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAMY,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE,EAAC,CAAC;QACnE;MACF,CAAC,CAAC;MACF,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC3D,OAAO,EAAE,CAAC,CAAC;IACb;EACF,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACd,MAAMyB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,eAAe,GAAG,MAAMf,gBAAgB,CAAC,CAAC;MAChDD,cAAc,CAACgB,eAAe,CAAC;IACjC,CAAC;IAEDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACN,oBACErB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACEvB,OAAA,CAACF,eAAe;MAAC0B,KAAK,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvC5B,OAAA;MAAK6B,SAAS,EAAC,kBAAkB;MAAAN,QAAA,EAC9BlB,WAAW,CAACyB,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACjChC,OAAA,CAACH,WAAW;QAAA,GAAiBkC;MAAU,GAArBC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACxB,EAAA,CA3CID,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AA6CjB,SAAQA,WAAW;AAAE,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}